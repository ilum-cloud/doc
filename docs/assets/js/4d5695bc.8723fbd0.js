"use strict";(self.webpackChunkilumdoc=self.webpackChunkilumdoc||[]).push([[270],{3905:(e,t,a)=>{a.d(t,{Zo:()=>u,kt:()=>p});var r=a(7294);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function s(e,t){if(null==e)return{};var a,r,n=function(e,t){if(null==e)return{};var a,r,n={},i=Object.keys(e);for(r=0;r<i.length;r++)a=i[r],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)a=i[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var l=r.createContext({}),c=function(e){var t=r.useContext(l),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},u=function(e){var t=c(e.components);return r.createElement(l.Provider,{value:t},e.children)},m="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},f=r.forwardRef((function(e,t){var a=e.components,n=e.mdxType,i=e.originalType,l=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),m=c(a),f=n,p=m["".concat(l,".").concat(f)]||m[f]||d[f]||i;return a?r.createElement(p,o(o({ref:t},u),{},{components:a})):r.createElement(p,o({ref:t},u))}));function p(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var i=a.length,o=new Array(i);o[0]=f;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[m]="string"==typeof e?e:n,o[1]=s;for(var c=2;c<i;c++)o[c]=a[c];return r.createElement.apply(null,o)}return r.createElement.apply(null,a)}f.displayName="MDXCreateElement"},8854:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>d,frontMatter:()=>i,metadata:()=>s,toc:()=>c});var r=a(7462),n=(a(7294),a(3905));const i={title:"Ilum Table",sidebar_position:1},o="Ilum Table",s={unversionedId:"architecture/ilum-table",id:"architecture/ilum-table",title:"Ilum Table",description:"Data storage and retrieval forms the backbone of any data processing and analysis system. One such approach in this domain is the use of columnar data formats, which have the advantage of efficient data compression and enhanced read efficiency, making them the ideal choice for data warehousing and Big Data processing.",source:"@site/docs/architecture/ilum-table.md",sourceDirName:"architecture",slug:"/architecture/ilum-table",permalink:"/doc/architecture/ilum-table",draft:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{title:"Ilum Table",sidebar_position:1},sidebar:"docSidebar",previous:{title:"Architecture",permalink:"/doc/architecture/"},next:{title:"Get Started",permalink:"/doc/get_started"}},l={},c=[{value:"Key Features of Ilum Table:",id:"key-features-of-ilum-table",level:2}],u={toc:c},m="wrapper";function d(e){let{components:t,...i}=e;return(0,n.kt)(m,(0,r.Z)({},u,i,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"ilum-table"},"Ilum Table"),(0,n.kt)("p",null,"Data storage and retrieval forms the backbone of any data processing and analysis system. One such approach in this domain is the use of columnar data formats, which have the advantage of efficient data compression and enhanced read efficiency, making them the ideal choice for data warehousing and Big Data processing."),(0,n.kt)("p",null,"Ilum Table is a novel approach to columnar data storage that aims to enhance simplicity and versatility. It serves as an abstraction layer over other established formats such as Delta, Iceberg, and Hudi. The primary intent behind Ilum Table is to simplify the interaction and management of these data formats, bringing them together into one unified platform."),(0,n.kt)("p",null,"The premise might seem unusual \u2013 using multiple data formats on a single platform. However, this concept blossoms when you consider the diversity of use cases in data processing. Each data format brings its unique strengths to the table. For instance, there might be a feature in Hudi that Iceberg doesn't support and vice versa. With Ilum Table, you don't have to make a hard choice. You can harness the strengths of each format as per your use-case requirements, even employing all of them if needed."),(0,n.kt)("img",{src:a(6222).Z,alt:"Ilum",title:"Ilum",align:"center"}),(0,n.kt)("h2",{id:"key-features-of-ilum-table"},"Key Features of Ilum Table:"),(0,n.kt)("ol",null,(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("strong",{parentName:"li"},"Unified Platform"),": Ilum Table provides a common ground to work with multiple columnar data formats. You can work with Delta, Iceberg, Hudi, and any other format all on one platform, reducing the complexity that comes with handling multiple data formats."),(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("strong",{parentName:"li"},"Use-Case Adaptability"),": Whether your use case demands the speed of Delta, the snapshot capabilities of Iceberg, or the incremental processing of Hudi, Ilum Table has got you covered. You can leverage the unique features of each format as per your use-case requirements."),(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("strong",{parentName:"li"},"Simplified Data Management"),": By serving as an abstraction layer over different formats, Ilum Table simplifies data management. Whether it's for creating, updating, deleting, or simply reading data, Ilum Table provides a streamlined interface that abstracts the complexities of individual data formats."),(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("strong",{parentName:"li"},"Enhanced Efficiency"),": With the power to choose the data format best suited for your needs, you can optimize your data operations for maximum efficiency. This can lead to improved query performance, faster data retrieval, and ultimately, more insightful data analysis."),(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("strong",{parentName:"li"},"Flexibility"),": Ilum Table is not a one-size-fits-all solution. It acknowledges the diversity in data processing use cases and provides the flexibility to use the most appropriate data format(s) for your specific needs.")),(0,n.kt)("p",null,"In essence, Ilum Table is a step towards simplifying the complex world of columnar data formats. It offers a single interface to work with multiple data formats, fostering an environment of simplicity, flexibility, and efficiency for all your data processing needs."))}d.isMDXComponent=!0},6222:(e,t,a)=>{a.d(t,{Z:()=>r});const r=a.p+"assets/images/combi-de39cae665c7f327e47c4fc364e5f81b.png"}}]);