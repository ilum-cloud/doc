"use strict";(self.webpackChunkilumdoc=self.webpackChunkilumdoc||[]).push([[171],{3905:(e,t,a)=>{a.d(t,{Zo:()=>u,kt:()=>h});var n=a(7294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},i=Object.keys(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var s=n.createContext({}),p=function(e){var t=n.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},u=function(e){var t=p(e.components);return n.createElement(s.Provider,{value:t},e.children)},c="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,i=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),c=p(a),d=r,h=c["".concat(s,".").concat(d)]||c[d]||m[d]||i;return a?n.createElement(h,o(o({ref:t},u),{},{components:a})):n.createElement(h,o({ref:t},u))}));function h(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=a.length,o=new Array(i);o[0]=d;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[c]="string"==typeof e?e:r,o[1]=l;for(var p=2;p<i;p++)o[p]=a[p];return n.createElement.apply(null,o)}return n.createElement.apply(null,a)}d.displayName="MDXCreateElement"},6793:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>m,frontMatter:()=>i,metadata:()=>l,toc:()=>p});var n=a(7462),r=(a(7294),a(3905));const i={title:"API Reference",sidebar_position:6},o=void 0,l={unversionedId:"api_ref",id:"api_ref",title:"API Reference",description:"The Ilum API forms the backbone of Ilum's functionality, providing a programmatic interface that allows users to interact with their Apache Spark clusters and jobs. This RESTful API is designed to be robust, flexible, and intuitive, enabling developers to seamlessly integrate Ilum's capabilities into their existing applications and workflows.",source:"@site/docs/api_ref.md",sourceDirName:".",slug:"/api_ref",permalink:"/doc/api_ref",draft:!1,tags:[],version:"current",sidebarPosition:6,frontMatter:{title:"API Reference",sidebar_position:6},sidebar:"docSidebar",previous:{title:"Migration",permalink:"/doc/migration"},next:{title:"Production",permalink:"/doc/production"}},s={},p=[{value:"Importance",id:"importance",level:3},{value:"Interacting with Ilum API",id:"interacting-with-ilum-api",level:3},{value:"Expose Ilum-Core",id:"expose-ilum-core",level:4},{value:"Get Available Clusters",id:"get-available-clusters",level:4},{value:"Create a Spark Job Group",id:"create-a-spark-job-group",level:4},{value:"Run a Job and Get a Result",id:"run-a-job-and-get-a-result",level:4},{value:"OpenAPI 3.0",id:"openapi-30",level:3}],u={toc:p},c="wrapper";function m(e){let{components:t,...a}=e;return(0,r.kt)(c,(0,n.Z)({},u,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"The Ilum API forms the backbone of Ilum's functionality, providing a programmatic interface that allows users to interact with their Apache Spark clusters and jobs. This RESTful API is designed to be robust, flexible, and intuitive, enabling developers to seamlessly integrate Ilum's capabilities into their existing applications and workflows."),(0,r.kt)("p",null,"Ilum's OpenAPI specification can be found ",(0,r.kt)("a",{parentName:"p",href:"/api"},"here")),(0,r.kt)("h3",{id:"importance"},"Importance"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"Real-Time Interactivity"),": Perhaps one of the most powerful features of the Ilum API is its ability to handle real-time interactive Spark jobs. This feature allows applications to send data to be processed immediately, without waiting for Spark context initialization. This kind of real-time interactivity can be invaluable for applications that need instant insights from their data.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"Ease of Integration"),": The Ilum API allows developers to access and control Spark clusters from within their own applications, eliminating the need for manual intervention or standalone tools. This means that Ilum's capabilities can be leveraged wherever they're needed, whether that's in a custom data analysis application, a machine learning pipeline, or an enterprise data management system.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"Automation and Control"),": The Ilum API enables users to automate tasks such as job submission, monitoring, and cluster management. This allows for streamlined operations and less room for error, enhancing efficiency and reliability. Users can also control several Spark clusters from one place, regardless of whether they're deployed in the cloud or on-premises, and whether they use Yarn or Kubernetes as their cluster manager.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"Scalability and Flexibility"),": The Ilum API was designed with scalability in mind, allowing it to handle the management of Spark clusters ranging from just a single node to hundreds of nodes. Furthermore, its RESTful design means it's based on standard HTTP methods, making it accessible from any platform or language that can make HTTP requests."))),(0,r.kt)("p",null,"In summary, the Ilum API is a crucial part of Ilum's offering, enabling high levels of automation, integration, and real-time interactivity for managing and monitoring Apache Spark clusters. It's a powerful tool for any organization that wants to leverage the power of Spark in a flexible, scalable, and efficient manner."),(0,r.kt)("h3",{id:"interacting-with-ilum-api"},"Interacting with Ilum API"),(0,r.kt)("p",null,"This guide provides examples of how to interact with the Ilum API. The examples will use ",(0,r.kt)("inlineCode",{parentName:"p"},"curl")," command line tool, but the same principles apply regardless of your chosen HTTP client."),(0,r.kt)("h4",{id:"expose-ilum-core"},"Expose Ilum-Core"),(0,r.kt)("p",null,"Firstly, expose the ",(0,r.kt)("inlineCode",{parentName:"p"},"ilum-core")," service on port 9888 using the following command:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"$ kubectl port-forward svc/ilum-core 9888:9888\n")),(0,r.kt)("p",null,"This allows for local interaction with the Ilum service."),(0,r.kt)("h4",{id:"get-available-clusters"},"Get Available Clusters"),(0,r.kt)("p",null,"To retrieve a list of available clusters, execute the following ",(0,r.kt)("inlineCode",{parentName:"p"},"GET")," request:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'$ curl "http://localhost:9888/api/v1/cluster"\n')),(0,r.kt)("p",null,"The first cluster is created during the initial deployment and is preconfigured to work with the Kubernetes instance used by Ilum."),(0,r.kt)("h4",{id:"create-a-spark-job-group"},"Create a Spark Job Group"),(0,r.kt)("p",null,"To begin interacting with Ilum, you need to create a scalable Spark job group by uploading a JAR file containing your Spark application. Use the following ",(0,r.kt)("inlineCode",{parentName:"p"},"POST")," request to create a group:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"$ curl -X POST 'http://localhost:9888/api/v1/group' \\\n    --form 'jars=@\"/path/to/local/file/ilum-job-example.jar\"' \\\n    --form 'scale=\"1\"' \\\n    --form 'clusterName=\"default\"' \\\n    --form 'name=\"example-group\"'\n")),(0,r.kt)("p",null,"Upon success, this request will return a Group ID. You can retrieve this ID later by running:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"$ curl http://localhost:9888/api/v1/group\n")),(0,r.kt)("h4",{id:"run-a-job-and-get-a-result"},"Run a Job and Get a Result"),(0,r.kt)("p",null,"To execute a job within the group and retrieve the result, use the following ",(0,r.kt)("inlineCode",{parentName:"p"},"POST")," request. Make sure to replace ",(0,r.kt)("inlineCode",{parentName:"p"},"GROUP_ID")," with the actual ID of your group:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'$ curl -X POST \'http://localhost:9888/api/v1/group/GROUP_ID/job/execute\' \\\n    --header \'Content-Type: application/json\' \\\n    --data-raw \'{\n        "type": "interactive_job_execute",\n        "jobClass": "cloud.ilum.job.example.ExampleJob",\n        "jobConfig": {\n            "parameter": "Welcome to ILUM"\n        }\n    }\'\n')),(0,r.kt)("p",null,"This request will start the job in the specified group and return the job's result."),(0,r.kt)("h3",{id:"openapi-30"},"OpenAPI 3.0"),(0,r.kt)("p",null,"OpenAPI 3.0 is a widely adopted standard for designing, building, and documenting RESTful APIs. Using OpenAPI 3.0 for the Ilum API brings several significant benefits:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"Standardization"),": OpenAPI 3.0 provides a clear and standardized structure for designing and documenting APIs. This promotes interoperability and reduces the learning curve for developers who are already familiar with the OpenAPI standard.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"Interactive Documentation"),": OpenAPI 3.0 supports the generation of interactive API documentation. This not only helps developers understand how to use the API, but also enables them to try out API calls directly from the documentation, improving usability and aiding in testing.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"Code Generation"),": There are numerous tools available that can generate client SDKs in various languages from an OpenAPI specification. This can significantly speed up development and ensure the generated code is in line with the API's design.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"Validation and Testing"),": OpenAPI 3.0 specifications can be used to automatically validate API requests and responses, helping to catch errors and inconsistencies early in the development process. They can also be used to generate test cases, further aiding in quality assurance."))),(0,r.kt)("p",null,"By using OpenAPI 3.0, the Ilum API not only gains these benefits, but also aligns itself with a wide ecosystem of tools and best practices, thereby enhancing its usability, reliability, and maintainability."))}m.isMDXComponent=!0}}]);