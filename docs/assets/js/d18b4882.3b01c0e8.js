"use strict";(self.webpackChunkilumdoc=self.webpackChunkilumdoc||[]).push([[157],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>N});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function m(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var u=a.createContext({}),p=function(e){var t=a.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},d=function(e){var t=p(e.components);return a.createElement(u.Provider,{value:t},e.children)},o="mdxType",s={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},k=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,l=e.originalType,u=e.parentName,d=m(e,["components","mdxType","originalType","parentName"]),o=p(n),k=r,N=o["".concat(u,".").concat(k)]||o[k]||s[k]||l;return n?a.createElement(N,i(i({ref:t},d),{},{components:n})):a.createElement(N,i({ref:t},d))}));function N(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=n.length,i=new Array(l);i[0]=k;var m={};for(var u in t)hasOwnProperty.call(t,u)&&(m[u]=t[u]);m.originalType=e,m[o]="string"==typeof e?e:r,i[1]=m;for(var p=2;p<l;p++)i[p]=n[p];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}k.displayName="MDXCreateElement"},8361:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>i,default:()=>s,frontMatter:()=>l,metadata:()=>m,toc:()=>p});var a=n(7462),r=(n(7294),n(3905));const l={title:"Ilum UI"},i=void 0,m={unversionedId:"configuration/ilum-ui",id:"configuration/ilum-ui",title:"Ilum UI",description:"Ilum UI helm chart config.",source:"@site/docs/configuration/ilum-ui.md",sourceDirName:"configuration",slug:"/configuration/ilum-ui",permalink:"/configuration/ilum-ui",draft:!1,tags:[],version:"current",frontMatter:{title:"Ilum UI"},sidebar:"docSidebar",previous:{title:"Ilum Core",permalink:"/configuration/ilum-core"},next:{title:"Use Cases",permalink:"/use_cases"}},u={},p=[{value:"TL;DR",id:"tldr",level:2},{value:"Installing the Chart",id:"installing-the-chart",level:2},{value:"Uninstalling the Chart",id:"uninstalling-the-chart",level:2},{value:"Parameters",id:"parameters",level:2},{value:"Common parameters",id:"common-parameters",level:3},{value:"ilum-ui deployment parameters",id:"ilum-ui-deployment-parameters",level:3},{value:"ilum-ui service parameters",id:"ilum-ui-service-parameters",level:3},{value:"ilum-ui ingress parameters",id:"ilum-ui-ingress-parameters",level:3}],d={toc:p},o="wrapper";function s(e){let{components:t,...n}=e;return(0,r.kt)(o,(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"Ilum UI helm chart config."),(0,r.kt)("h2",{id:"tldr"},"TL;DR"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"$ helm repo add ilum https://charts.ilum.cloud\n$ helm install ilum-ui ilum/ilum-ui\n")),(0,r.kt)("h2",{id:"installing-the-chart"},"Installing the Chart"),(0,r.kt)("p",null,"To install the chart with the release name ",(0,r.kt)("inlineCode",{parentName:"p"},"ilum-ui"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"$ helm install ilum-ui ilum/ilum-ui\n")),(0,r.kt)("p",null,"The command deploys ",(0,r.kt)("inlineCode",{parentName:"p"},"ilum-ui")," on the Kubernetes cluster in the default configuration. The ",(0,r.kt)("a",{parentName:"p",href:"#parameters"},"Parameters")," section lists the parameters that can be configured during installation."),(0,r.kt)("h2",{id:"uninstalling-the-chart"},"Uninstalling the Chart"),(0,r.kt)("p",null,"To uninstall/delete the ",(0,r.kt)("inlineCode",{parentName:"p"},"ilum-ui")," deployment:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"$ helm delete ilum-ui\n")),(0,r.kt)("p",null,"The command removes all the Kubernetes components associated with the chart and deletes the release."),(0,r.kt)("h2",{id:"parameters"},"Parameters"),(0,r.kt)("h3",{id:"common-parameters"},"Common parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:null},"Value"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"nameOverride")),(0,r.kt)("td",{parentName:"tr",align:null},"String to partially override ilum-ui.fullname template (will maintain the release name)"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},'""'))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"fullnameOverride")),(0,r.kt)("td",{parentName:"tr",align:null},"String to fully override ilum-ui.fullname template"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},'""'))))),(0,r.kt)("h3",{id:"ilum-ui-deployment-parameters"},"ilum-ui deployment parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:null},"Value"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"image")),(0,r.kt)("td",{parentName:"tr",align:null},"ilum-ui image"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"ilum/ui:5.2.0"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"pullPolicy")),(0,r.kt)("td",{parentName:"tr",align:null},"ilum-ui image pull policy"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"IfNotPresent"))))),(0,r.kt)("h3",{id:"ilum-ui-service-parameters"},"ilum-ui service parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:null},"Value"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"service.type")),(0,r.kt)("td",{parentName:"tr",align:null},"ilum-ui service type"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"ClusterIP"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"service.port")),(0,r.kt)("td",{parentName:"tr",align:null},"ilum-ui service port"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"9777"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"service.nodePort")),(0,r.kt)("td",{parentName:"tr",align:null},"ilum-ui service node port - required when ",(0,r.kt)("inlineCode",{parentName:"td"},"type")," is ",(0,r.kt)("inlineCode",{parentName:"td"},"LoadBalancer")," or ",(0,r.kt)("inlineCode",{parentName:"td"},"NodePort")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},'""'))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"service.clusterIP")),(0,r.kt)("td",{parentName:"tr",align:null},"ilum-ui service cluster IP - required when ",(0,r.kt)("inlineCode",{parentName:"td"},"type")," is ",(0,r.kt)("inlineCode",{parentName:"td"},"ClusterIP")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},'""'))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"service.loadBalancerIP")),(0,r.kt)("td",{parentName:"tr",align:null},"ilum-ui service load balancer IP - required when ",(0,r.kt)("inlineCode",{parentName:"td"},"type")," is ",(0,r.kt)("inlineCode",{parentName:"td"},"LoadBalancer")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},'""'))))),(0,r.kt)("h3",{id:"ilum-ui-ingress-parameters"},"ilum-ui ingress parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:null},"Value"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"ingress.enabled")),(0,r.kt)("td",{parentName:"tr",align:null},"ilum-ui ingress enabled flag"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"false"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"ingress.version")),(0,r.kt)("td",{parentName:"tr",align:null},"ilum-ui ingress version"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"v1"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"ingress.className")),(0,r.kt)("td",{parentName:"tr",align:null},"ilum-ui ingress class name"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},'""'))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"ingress.tls")),(0,r.kt)("td",{parentName:"tr",align:null},"ilum-ui ingress tls configuration"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"[]"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"ingress.tls[x].secretName")),(0,r.kt)("td",{parentName:"tr",align:null},"ilum-ui ingress secret name to apply for a single tls configuration entry"),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"ingress.tls[x].hosts")),(0,r.kt)("td",{parentName:"tr",align:null},"ilum-ui ingress hosts list to apply for a single tls configuration entry"),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"ingress.annotations")),(0,r.kt)("td",{parentName:"tr",align:null},"ilum-ui ingress annotations in yaml format"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"nginx.ingress.kubernetes.io/rewrite-target: /$2"),(0,r.kt)("br",null),(0,r.kt)("inlineCode",{parentName:"td"},'nginx.ingress.kubernetes.io/proxy-body-size: "600m"'),(0,r.kt)("br",null),(0,r.kt)("inlineCode",{parentName:"td"},'nginx.org/client-max-body-size: "600m"'))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"ingress.path")),(0,r.kt)("td",{parentName:"tr",align:null},"ilum-core ingress path"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"/(.*)"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"ingress.pathType")),(0,r.kt)("td",{parentName:"tr",align:null},"ilum-core ingress pathType"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Prefix"))))))}s.isMDXComponent=!0}}]);